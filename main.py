import telebot
from destiny_number import get_description
from date_birthday import get_decode_birthday
from number_name import calculate_name
import re

token = '6232507877:AAF5qdMgv0HAQHWMgggi8Nk1PDK6DOw4zho'
bot = telebot.TeleBot(token)
user_states = {}


def totem_animal(day, month, year):
    digit = (int(day) + int(month)) * int(year)
    line = str(digit)
    res = 0
    while len(line) > 1:
        res = 0
        for i in str(line):
            res = res + int(i)
        line = str(res)
    if res == 1:
        return '–í–∞—à–µ —Ç–æ—Ç–µ–º–Ω–æ–µ –∂–∏–≤–æ—Ç–Ω–æ–µ: <strong>–°–ª–æ–Ω</strong>üêò\n\n–°–ª–æ–Ω –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç —Å–≤–æ–µ–º—É –æ–±–ª–∞–¥–∞—Ç–µ–ª—é –ø–µ—Ä–µ–Ω—è—Ç—å —É –Ω–µ–≥–æ —É–º–µ–Ω–∏–µ –æ–±–µ—Ä–µ–≥–∞—Ç—å —Å–≤–æ–∏—Ö –±–ª–∏–∑–∫–∏—Ö, –∑–∞–±–æ—Ç–∏—Ç—Å—è –æ –Ω–∏—Ö. \n–õ—é–¥–∏ —Å —ç—Ç–∏–º —Ç–æ—Ç–µ–º–Ω—ã–º –∂–∏–≤–æ—Ç–Ω—ã–º –¥–æ–ª–∂–Ω—ã –∏—Å–∫–∞—Ç—å —Å–µ–º–µ–π–Ω–æ–µ —Å—á–∞—Å—Ç—å–µ –∏ –ª—é–±–æ–≤—å, –≤–µ–¥—å –∏–º–µ–Ω–Ω–æ —ç—Ç–æ –Ω–∞–¥–µ–ª–∏—Ç –∏—Ö —É–¥–∞—á–µ–π –∏ –ø–æ–ª–Ω–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –æ—Ç —Å–≤–æ–µ–≥–æ ¬´—Ö—Ä–∞–Ω–∏—Ç–µ–ª—è¬ª.\n–¢–∞–∫–∂–µ —Å—Ç–æ–∏—Ç –æ—Ç–º–µ—Ç–∏—Ç—å, —á—Ç–æ —É –ª—é–¥–µ–π —Å —ç—Ç–∏–º —Ç–æ—Ç–µ–º–Ω—ã–º –∂–∏–≤–æ—Ç–Ω—ã–º —á–∞—Å—Ç–æ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –∑–∞—â–∏—Ç–Ω—ã—Ö —Ä–µ—Ñ–ª–µ–∫—Å–æ–≤. –û–¥–Ω–∞–∫–æ –æ–Ω–∏ –∫–æ–º–ø–µ–Ω—Å–∏—Ä—É—é—Ç —ç—Ç–æ —Å–≤–æ–µ–π —Å—Ç–æ–π–∫–æ—Å—Ç—å—é –∏ –Ω–µ—É—Å—Ç–∞–Ω–Ω—ã–º –ø–æ–∏—Å–∫–æ–º –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ —Å–≤–æ–∏ –≤–æ–ø—Ä–æ—Å—ã.'
    if res == 2:
        return '–í–∞—à–µ —Ç–æ—Ç–µ–º–Ω–æ–µ –∂–∏–≤–æ—Ç–Ω–æ–µ: <strong>–¢–∏–≥—Ä</strong>üêÖ\n\n–¢–∏–≥—Ä ‚Äì —ç—Ç–æ –æ—á–µ–Ω—å —Å–∏–ª—å–Ω–æ–µ –∏ –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ–µ —Ç–æ—Ç–µ–º–Ω–æ–µ –∂–∏–≤–æ—Ç–Ω–æ–µ, –∫–æ—Ç–æ—Ä–æ–µ —Å–ø–æ—Å–æ–±–Ω–æ –ø–æ–º–æ—â—å —Å–≤–æ–µ–º—É –æ–±–ª–∞–¥–∞—Ç–µ–ª—é –≤–æ –≤—Å–µ—Ö –∂–∏–∑–Ω–µ–Ω–Ω—ã—Ö –∞—Å–ø–µ–∫—Ç–∞—Ö.\n–ì–ª–∞–≤–Ω–æ–µ –ø—Ä–∞–≤–∏–ª–æ –¢–∏–≥—Ä–∞ ¬´–ü—Ä–æ—â–∞—Ç—å —Å–≤–æ–µ–≥–æ –æ–±–∏–¥—á–∏–∫–∞, –Ω–æ —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ —Ç–æ–≥–æ, –∫–∞–∫ –æ–±–∏–¥—á–∏–∫ –ø–æ–ª–Ω–æ—Å—Ç—å—é –ø—Ä–∏–∑–Ω–∞–ª —Å–≤–æ–µ –ø–æ—Ä–∞–∂–µ–Ω–∏–µ¬ª.'
    if res == 3:
        return '–í–∞—à–µ —Ç–æ—Ç–µ–º–Ω–æ–µ –∂–∏–≤–æ—Ç–Ω–æ–µ: <strong>–í–æ—Ä–æ–Ω</strong>üê§\n\n–í–æ—Ä–æ–Ω —Å—á–∏—Ç–∞–µ—Ç—Å—è –º—É–¥—Ä–æ–π, –∞–Ω–∞–ª–∏–∑–∏—Ä—É—é—â–µ–π –≤—Å–µ –≤–æ–∫—Ä—É–≥ –ø—Ç–∏—Ü–µ–π, —Å–∫–ª–æ–Ω–Ω–æ–π —Ç–∞–∫ –∂–µ –∏ –∫ —Å–∞–º–æ–∫—Ä–∏—Ç–∏–∫–µ –∏ —Ö–∏—Ç—Ä–æ—Å—Ç–∏.\n–ò–º–µ–Ω–Ω–æ —ç—Ç–∏ –∫–∞—á–µ—Å—Ç–≤–∞, –æ–Ω–∞ –∏ –ø–µ—Ä–µ–¥–∞–µ—Ç —Å–≤–æ–µ–º—É –æ–±–ª–∞–¥–∞—Ç–µ–ª—é.\n–õ—é–¥–∏ —Å —ç—Ç–∏–º —Ç–æ—Ç–µ–º–Ω—ã–º –∂–∏–≤–æ—Ç–Ω—ã–º —Å–∫–ª–æ–Ω–Ω—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–≤–æ–π —Ä–∞–∑—É–º, –∞ –Ω–µ –≥—Ä—É–±—É—é —Å–∏–ª—É.\n–ì–ª–∞–≤–Ω–æ–µ –ø—Ä–∞–≤–∏–ª–æ –í–æ—Ä–æ–Ω–∞ ¬´–ù–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–∏–ª—É —Ç–∞–º, –≥–¥–µ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç¬ª.'
    if res == 4:
        return '–í–∞—à–µ —Ç–æ—Ç–µ–º–Ω–æ–µ –∂–∏–≤–æ—Ç–Ω–æ–µ: <strong>–î–µ–ª—å—Ñ–∏–Ω</strong>üê¨\n\n–î–µ–ª—å—Ñ–∏–Ω ‚Äì —ç—Ç–æ –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–µ —Ç–æ—Ç–µ–º–Ω–æ–µ –∂–∏–≤–æ—Ç–Ω–æ–µ, –∫–æ—Ç–æ—Ä–æ–µ —Å–æ–µ–¥–∏–Ω—è–µ—Ç –≤ —Å–µ–±–µ –≤—Å–µ —á–µ—Ç—ã—Ä–µ —Å—Ç–∏—Ö–∏–∏: –∑–µ–º–ª—é, –≤–æ–¥—É, –æ–≥–æ–Ω—å –∏ –≤–æ–∑–¥—É—Ö.\n–û–±–ª–∞–¥–∞—Ç–µ–ª–∏ —ç—Ç–æ–≥–æ —Ç–æ—Ç–µ–º–Ω–æ–≥–æ –∂–∏–≤–æ—Ç–Ω–æ–≥–æ —Å–ø–æ—Å–æ–±–Ω—ã –¥–æ–±–∏—Ç—å—Å—è –Ω–µ–≤–µ—Ä–æ—è—Ç–Ω—ã—Ö —É—Å–ø–µ—Ö–æ–≤ –≤ –ª—é–±–æ–π —Å—Ñ–µ—Ä–µ. –î–ª—è —ç—Ç–æ–≥–æ –∏–º –≤—Å–µ–≥–æ —Ç–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–æ—Ö—Ä–∞–Ω—è—Ç—å —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–µ —Å–∏–ª—ã, –∞ –∑–Ω–∞—á–∏—Ç –Ω–µ —Ä–∞—Å—Ç—Ä–∞—á–∏–≤–∞—Ç—å —Å–≤–æ–∏ —Ä–µ—Å—É—Ä—Å—ã –Ω–∞ –Ω–µ–∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω—ã–µ –≤–µ—â–∏, —Å–æ–±—ã—Ç–∏—è –∏ –Ω–∞ –Ω–µ–≥–∞—Ç–∏–≤–Ω—ã—Ö –ª—é–¥–µ–π.'
    if res == 5:
        return '–í–∞—à–µ —Ç–æ—Ç–µ–º–Ω–æ–µ –∂–∏–≤–æ—Ç–Ω–æ–µ: <strong>–°–æ–±–∞–∫–∞</strong>üê∂\n\n–≠—Ç–æ —Ç–æ—Ç–µ–º–Ω–æ–µ –∂–∏–≤–æ—Ç–Ω–æ–µ –¥–∞—Ä–∏—Ç —Å–≤–æ–µ–º—É –æ–±–ª–∞–¥–∞—Ç–µ–ª—é –º–æ—Ç–∏–≤–∞—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–º–æ–≥–∞–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ —Å—Ç–∞–≤–∏—Ç—å —Ü–µ–ª–∏ –∏ –¥–æ—Å—Ç–∏–≥–∞—Ç—å –∏—Ö.\n–°–æ–±–∞–∫–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—É—Ç—å –∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º—É –º–µ—Å—Ç—É –≤ –º–∏—Ä–µ, –∞ —Ç–∞–∫–∂–µ –ø–æ–º–æ–≥–∞–µ—Ç –Ω–∞–π—Ç–∏ –≤–µ—Ä–Ω—ã—Ö –¥—Ä—É–∑–µ–π –∏ –ª—é–±–æ–≤—å.'
    if res == 6:
        return '–í–∞—à–µ —Ç–æ—Ç–µ–º–Ω–æ–µ –∂–∏–≤–æ—Ç–Ω–æ–µ: <strong>–û—Ä–µ–ª</strong>ü¶Ö\n\n–û—Ä–µ–ª –¥–∞—Ä–∏—Ç —á–µ–ª–æ–≤–µ–∫—É —á—É–≤—Å—Ç–≤–æ —Å–≤–æ–±–æ–¥—ã –∏ –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏. –õ—é–¥–∏ —Å —ç—Ç–∏ —Ç–æ—Ç–µ–º–Ω—ã–º –∂–∏–≤–æ—Ç–Ω—ã–º –æ—á–µ–Ω—å —Ä–µ–¥–∫–æ —á—É–≤—Å—Ç–≤—É—é—Ç —Å–µ–±—è —Å–∫–æ–≤–∞–Ω–Ω—ã–º–∏, –≤–µ–¥—å —Å–≤–æ–±–æ–¥–∞ —É –Ω–∏—Ö –≤ –∫—Ä–æ–≤–∏.\n–¢–∞–∫–∂–µ –æ—Ä–µ–ª –ø–æ–º–æ–≥–∞–µ—Ç –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Ä–∞—Å—Å—Ç–∞–Ω–æ–≤–∫–µ –∂–∏–∑–Ω–µ–Ω–Ω—ã—Ö –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–≤. –û–¥–Ω–∞–∫–æ —Å—Ç–æ–∏—Ç –ø–æ–º–Ω–∏—Ç—å, —á—Ç–æ –µ—Å–ª–∏ –Ω–µ –ø–æ—Å—Ç–∞–≤–∏—Ç—å –û—Ä–ª—É —á–µ—Ç–∫—É—é —Ü–µ–ª—å, –Ω–æ –Ω–µ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å.'
    if res == 7:
        return '–í–∞—à–µ —Ç–æ—Ç–µ–º–Ω–æ–µ –∂–∏–≤–æ—Ç–Ω–æ–µ: <strong>–ó–º–µ—è</strong>üêç\n\n–≠—Ç–æ —Ç–æ—Ç–µ–º–Ω–æ–µ –∂–∏–≤–æ—Ç–Ω–æ–µ, —á–∞—Å—Ç–æ –ø—Ä–∏–∑—ã–≤–∞–µ—Ç —Å–≤–æ–µ–≥–æ –æ–±–ª–∞–¥–∞—Ç–µ–ª—è –∫ —É–µ–¥–∏–Ω–µ–Ω–∏—é. –û–¥–Ω–∞–∫–æ –æ–Ω–æ –ø–æ–º–æ–≥–∞–µ—Ç –ø—Ä–µ–æ–¥–æ–ª–µ–≤–∞—Ç—å —Ç—Ä—É–¥–Ω–æ—Å—Ç–∏ –∏ –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏—è.\n–ó–º–µ—è –¥–∞—Ä–∏—Ç —á–µ–ª–æ–≤–µ–∫—É —Ö–æ—Ä–æ—à–µ–µ —á—É—Ç—å–µ, –≤—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç—å –∏ —Å—Ç–æ–π–∫–æ—Å—Ç—å. –ù–æ –≤–æ—Ç —Å–∏–ª—É, –∫ —Å–æ–∂–∞–ª–µ–Ω–∏—é, –ø–æ–¥–∞—Ä–∏—Ç—å –Ω–µ –º–æ–∂–µ—Ç.'
    if res == 8:
        return '–í–∞—à–µ —Ç–æ—Ç–µ–º–Ω–æ–µ –∂–∏–≤–æ—Ç–Ω–æ–µ: <strong>–ö–æ—Ç</strong>üêà\n\n–ö–æ—Ç –ø—Ä–∏–Ω–æ—Å–∏—Ç —Å–≤–æ–µ–º—É –æ–±–ª–∞–¥–∞—Ç–µ–ª—é –≤–µ–∑–µ–Ω–∏–µ –≤ –ª—é–±–æ–≤–Ω—ã—Ö –¥–µ–ª–∞—Ö, —Ä–∞–∑–≤–∏–≤–∞–µ—Ç –∏–Ω—Ç—É–∏—Ü–∏—é, –Ω–æ –Ω–µ –ª–æ–≥–∏–∫—É. –ü–æ—ç—Ç–æ–º—É –ª—é–¥—è–º —Å —ç—Ç–∏–º —Ç–æ—Ç–µ–º–æ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ —á–µ–º—É-—Ç–æ —É—á–∏—Ç—Å—è.\n–ö–æ—Ç –ø—Ä–∏–Ω–æ—Å–∏—Ç —É–¥–∞—á—É —Å–≤–æ–µ–º—É –ø–æ–¥–æ–ø–µ—á–Ω–æ–º—É –∏ –Ω–∞–¥–µ–ª—è–µ—Ç –µ–≥–æ —Ç–µ–ª–µ—Å–Ω–æ–π –≤—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç—å—é.'
    if res == 9:
        return '–í–∞—à–µ —Ç–æ—Ç–µ–º–Ω–æ–µ –∂–∏–≤–æ—Ç–Ω–æ–µ: <strong>–ë—ã–∫</strong>üêÇ\n\n–ë—ã–∫ –ø–æ–º–æ–≥–∞–µ—Ç —Å–≤–æ–µ–º—É –æ–±–ª–∞–¥–∞—Ç–µ–ª—é –Ω–µ –æ—Ç—Å—Ç—É–ø–∞—Ç—å –æ—Ç –Ω–∞–º–µ—á–µ–Ω–Ω–æ–π —Ü–µ–ª–∏, –¥–∞–∂–µ —Ç–æ–≥–¥–∞, –∫–æ–≥–¥–∞ –≤—Å–µ –∫–∞–∑–∞–ª–æ—Å—å –±—ã —É–∂–µ –ø—Ä–æ–ø–∞–ª–æ.\n–≠—Ç–æ —Ç–æ—Ç–µ–º–Ω–æ–µ –∂–∏–≤–æ—Ç–Ω–æ–µ —Å—á–∏—Ç–∞–µ—Ç—Å—è –Ω–µ–≤–µ—Ä–æ—è—Ç–Ω–æ —Å–∏–ª—å–Ω—ã–º —Ö—Ä–∞–Ω–∏—Ç–µ–ª–µ–º, –≤–µ–¥—å –æ–Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–µ —Ç–æ–ª—å–∫–æ —Å –ø–æ–¥—Å–æ–∑–Ω–∞–Ω–∏–µ–º —á–µ–ª–æ–≤–µ–∫–∞, –Ω–æ –∏ —Å —Å–∞–º–∏–º —Å–æ–∑–Ω–∞–Ω–∏–µ–º. –ê –µ—â–µ, –±—ã–∫ –ø–æ–º–æ–≥–∞–µ—Ç —Å–≤–æ–µ–º—É –ø–æ–¥–æ–ø–µ—á–Ω–æ–º—É –ª–µ–≥–∫–æ –Ω–∞—Ö–æ–¥–∏—Ç—å –≤—ã—Ö–æ–¥—ã –∏–∑ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–Ω—ã—Ö —Å–∏—Ç—É–∞—Ü–∏–π –∏ –∑–∞–≤–æ–¥–∏—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞.'
    return '–ù–µ–≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ'


def get_zodiac(month, day):
    if (int(day) >= 21 and int(month) == 3) or (int(day) <= 20 and int(month) == 4):
        return '–í–∞—à –∑–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞: <strong>–û–≤–µ–Ω</strong>\n\n –°—Ç–∏—Ö–∏—è: <strong>–æ–≥–æ–Ω—å</strong>üî•'
    if (int(day) >= 21 and int(month) == 4) or (int(day) <= 20 and int(month) == 5):
        return '–í–∞—à –∑–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞: <strong>–¢–µ–ª–µ—Ü</strong>\n\n –°—Ç–∏—Ö–∏—è: <strong>–∑–µ–º–ª—è</strong>üåè'
    if (int(day) >= 21 and int(month) == 5) or (int(day) <= 21 and int(month) == 6):
        return '–í–∞—à –∑–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞: <strong>–ë–ª–∏–∑–Ω–µ—Ü—ã</strong>\n\n –°—Ç–∏—Ö–∏—è: <strong>–≤–æ–∑–¥—É—Ö</strong>üí®'
    if (int(day) >= 22 and int(month) == 6) or (int(day) <= 22 and int(month) == 7):
        return '–í–∞—à –∑–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞: <strong>–†–∞–∫</strong>\n\n –°—Ç–∏—Ö–∏—è: <strong>–≤–æ–¥–∞</strong>üåä'
    if (int(day) >= 23 and int(month) == 7) or (int(day) <= 22 and int(month) == 8):
        return '–í–∞—à –∑–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞: <strong>–õ–µ–≤</strong>\n\n –°—Ç–∏—Ö–∏—è: <strong>–æ–≥–æ–Ω—å</strong>üî•'
    if (int(day) >= 23 and int(month) == 8) or (int(day) <= 23 and int(month) == 9):
        return '–í–∞—à –∑–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞: <strong>–î–µ–≤–∞</strong>\n\n –°—Ç–∏—Ö–∏—è: <strong>–∑–µ–º–ª—è</strong>üåè'
    if (int(day) >= 24 and int(month) == 9) or (int(day) <= 23 and int(month) == 10):
        return '–í–∞—à –∑–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞: <strong>–í–µ—Å—ã</strong>\n\n –°—Ç–∏—Ö–∏—è: <strong>–≤–æ–∑–¥—É—Ö</strong>üí®'
    if (int(day) >= 24 and int(month) == 10) or (int(day) <= 22 and int(month) == 11):
        return '–í–∞—à –∑–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞: <strong>–°–∫–æ—Ä–ø–∏–æ–Ω</strong>\n\n –°—Ç–∏—Ö–∏—è: <strong>–≤–æ–¥–∞</strong>üåä'
    if (int(day) >= 23 and int(month) == 11) or (int(day) <= 21 and int(month) == 12):
        return '–í–∞—à –∑–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞: <strong>–°—Ç—Ä–µ–ª–µ—Ü</strong>\n\n –°—Ç–∏—Ö–∏—è: <strong>–æ–≥–æ–Ω—å</strong>üî•'
    if (int(day) >= 22 and int(month) == 12) or (int(day) <= 20 and int(month) == 1):
        return '–í–∞—à –∑–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞: <strong>–ö–æ–∑–µ—Ä–æ–≥</strong>\n\n –°—Ç–∏—Ö–∏—è: <strong>–∑–µ–º–ª—è</strong>üåè'
    if (int(day) >= 21 and int(month) == 1) or (int(day) <= 18 and int(month) == 2):
        return '–í–∞—à –∑–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞: <strong>–í–æ–¥–æ–ª–µ–π</strong>\n\n –°—Ç–∏—Ö–∏—è: <strong>–≤–æ–∑–¥—É—Ö</strong>üí®'
    if (int(day) >= 19 and int(month) == 2) or (int(day) <= 20 and int(month) == 3):
        return '–í–∞—à –∑–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞: <strong>–†—ã–±—ã</strong>\n\n –°—Ç–∏—Ö–∏—è: <strong>–≤–æ–¥–∞</strong>üåä'

@bot.message_handler(commands=['start'])
def start_message(message):
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç‚úåÔ∏è\n–Ø —Ç–µ–ª–µ–≥—Ä–∞–º–º –±–æ—Ç ZodiacWorks ")
    help_message(message)


@bot.message_handler(commands=['help'])
def help_message(message):
    bot.send_message(message.chat.id,
                     "–í–æ—Ç —Å–ø–∏—Å–æ–∫ –º–æ–µ–≥–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞:\n1) —Ä–∞—Å—á—ë—Ç —á–∏—Å–ª–∞ —Å—É–¥—å–±—ã /destiny_number\n2) –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è –≤ –Ω—É–º–µ—Ä–æ–ª–æ–≥–∏–∏ /day_birthday\n3) —É–∑–Ω–∞—Ç—å –∑–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞ /zodiac")


@bot.message_handler(commands=['destiny_number'])
def destiny_number(message):
    bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –≤–∞—à—É –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ –¥–¥.–º–º.–≥–≥–≥–≥. –ù–∞–ø—Ä–∏–º–µ—Ä, 27.12.2003')
    user_states[message.chat.id] = 'destiny_number'


@bot.message_handler(func=lambda message: user_states.get(message.chat.id) == 'destiny_number')
def get_destiny_number(message):
    match = re.search(r'\d{2}\.\d{2}\.\d{4}', message.text)
    if match:
        mes = match.group()
        number = 0
        while len(mes) != 1:
            number = 0
            for i in mes:
                if i != '.':
                    number += int(i)
            mes = str(number)
        description = get_description(number)
        bot.send_message(message.chat.id, '–í–∞—à–µ —á–∏—Å–ª–æ —Å—É–¥—å–±—ã: ' + str(number))

        bot.send_message(message.chat.id, description, parse_mode="HTML")
        user_states[message.chat.id] = None
    else:
        bot.send_message(message.chat.id, '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö', parse_mode="HTML")



@bot.message_handler(commands=['day_birthday'])
def destiny_number(message):
    bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è')
    user_states[message.chat.id] = 'day_birthday'

@bot.message_handler(func=lambda message: user_states.get(message.chat.id) == 'day_birthday')
def get_birthday(message):
    if len(message.text.strip()) <= 2 and message.text.isnumeric():
        bot.send_message(message.chat.id, get_decode_birthday(int(message.text)))
        user_states[message.chat.id] = None
    else:
        bot.send_message(message.chat.id, '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö', parse_mode="HTML")


@bot.message_handler(commands=['zodiac'])
def zodiak(message):
    bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –≤–∞—à—É –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ –≥–≥–≥–≥.–º–º.–¥–¥. –ù–∞–ø—Ä–∏–º–µ—Ä, 20.08.2002')
    user_states[message.chat.id] = 'zodiac'

@bot.message_handler(func=lambda message: user_states.get(message.chat.id) == 'zodiac')
def get_birthday(message):
    match = re.search(r'\d{2}\.\d{2}\.\d{4}', message.text)
    if match:
        data = match.group()
        data = data.split('.')
        month = data[1]
        day = data[0]
        zodiac = get_zodiac(month, day)
        bot.send_message(message.chat.id, zodiac, parse_mode="HTML")
        user_states[message.chat.id] = None
    else:
        bot.send_message(message.chat.id, '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö', parse_mode="HTML")

@bot.message_handler(commands=['value_name'])
def value_name(message):
    bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –§–ò–û –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª. –ù–∞–ø—Ä–∏–º–µ—Ä, –õ—É—à–∫–∏–Ω –í–∞–ª–µ—Ä—å—è–Ω –ï–≤–∞–Ω–æ–≤–∏—á')
    user_states[message.chat.id] = 'value_name'

@bot.message_handler(func=lambda message: user_states.get(message.chat.id) == 'value_name')
def get_value_name(message):
    text = calculate_name(message.text)
    if text != -1:
        bot.send_message(message.chat.id, text, parse_mode="HTML")
        user_states[message.chat.id] = None
    else:
        bot.send_message(message.chat.id, '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö', parse_mode="HTML")

@bot.message_handler(commands=['totem_animal'])
def get_totem_animal(message):
    bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –≤–∞—à—É –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ –≥–≥–≥–≥.–º–º.–¥–¥. –ù–∞–ø—Ä–∏–º–µ—Ä, 20.08.2002')
    user_states[message.chat.id] = 'totem_animal'


@bot.message_handler(func=lambda message: user_states.get(message.chat.id) == 'totem_animal')
def get_totem_animal(message):
    match = re.search(r'\d{2}\.\d{2}\.\d{4}', message.text)
    if match:
        data = match.group()
        data = data.split('.')
        animal = totem_animal(data[0], data[1], data[2])
        bot.send_message(message.chat.id, animal, parse_mode="HTML")
        user_states[message.chat.id] = None
    else:
        bot.send_message(message.chat.id, '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö', parse_mode="HTML")

if __name__ == '__main__':
    while True:
        try:
            bot.polling(none_stop=True)
        except Exception:
            pass

